[do_sample = True, num_beam = 4]

python run_generation.py -m /mnt/mydisk/yogesh/hub/Llama-2-7b-chat-hf --prompt "In a world where artificial intelligence is transforming every aspect of human life, from automating tasks to revolutionizing scientific research and creative expression, a young developer, driven by an insatiable curiosity and an unwavering determination to push the boundaries of what is possible, embarks on an ambitious journey to create an advanced autograder system, one that not only evaluates code for correctness but also understands the logic behind each implementation, identifies inefficiencies, and provides dynamic, personalized feedback tailored to the unique learning style of each student, ensuring that no two learners receive the same generic responses but instead benefit from an AI-driven mentor capable of analyzing patterns in their mistakes, suggesting alternative approaches, and fostering a deeper understanding of fundamental programming concepts, all while integrating sophisticated natural language processing algorithms to assess short-answer" --input-tokens 32 --max-new-tokens 32 --token-latency --num-warmup 0 --num-iter 2  --deployment-mode --benchmark --native --torch-compile --greedy
Namespace(model_id='/mnt/mydisk/yogesh/hub/Llama-2-7b-chat-hf', dtype='bfloat16', input_tokens='32', max_new_tokens=32, prompt='In a world where a
rtificial intelligence is transforming every aspect of human life, from automating tasks to revolutionizing scientific research and creative expression, a young developer, driven by an insatiable curiosity and an unwavering determination to push the boundaries of what is possible, embarks on an ambitious journey to create an advanced autograder system, one that not only evaluates code for correctness but also understands the logic behind each implementation, identifies inefficiencies, and provides dynamic, personalized feedback tailored to the unique learning style of each student, ensuring that no two learners receive the same generic responses but instead benefit from an AI-driven mentor capable of analyzing patterns in their mistakes, suggesting alternative approaches, and fostering a deeper understanding of fundamental programming concepts, all while integrating sophisticated natural language processing algorithms to assess short-answer', streaming=False, config_file=None, greedy=True, native=True, deployment_mode=True, torch_compile=True, backend='inductor', profile=False, benchmark=True, num_iter=2, num_warmup=0, batch_size=1, token_latency=True, cache_weight_for_large_batch=False, vision_text_model=False, kv_cache_dtype='auto', input_mode='0')                                            Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:02<00:00,  1.43s/it]
Num beams:1
Converting the model using torch.compile
---- Prompt size: 187
/mnt/mydisk/yogesh/Native-Implementation/run_generation.py:494: FutureWarning: `torch.cpu.amp.autocast(args...)` is deprecated. Please use `torch.
amp.autocast('cpu', args...)` instead.                                                                                                              with torch.inference_mode(), torch.no_grad(), torch.cpu.amp.autocast(
checker: Sample is running in _sample() -> 3

Do sample = True

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
[12.889722108840942, 0.5086731910705566, 0.5036754608154297, 0.5055134296417236, 0.5056843757629395, 0.5037562847137451, 0.5031766891479492, 0.504
0581226348877, 0.5035796165466309, 0.5023093223571777, 0.5032856464385986, 0.5065996646881104, 0.5037624835968018, 0.5017397403717041, 0.5039677619934082, 0.5015416145324707, 0.5013251304626465, 0.5038149356842041, 0.5020060539245605, 0.5009481906890869, 0.5041513442993164, 0.5027868747711182, 0.5034418106079102, 0.5044252872467041, 0.5021305084228516, 0.5011746883392334, 0.5044898986816406, 0.5017168521881104, 0.5018465518951416, 0.5041730403900146, 0.5018856525421143, 0.5034465789794922]                                                                                          Output:
(tensor([[    1,   512,   263,  3186,   988, 23116, 21082,   338,  4327,   292,
          1432,  9565,   310,  5199,  2834, 29892,   515,  3345,  1218,  9595,
           304, 19479,  5281, 16021,  5925,   322,   907,  1230,  4603, 29892,
           263,  4123, 13897, 29892, 18225,   491,   385,  1663,  2219,   519,
         27742,   322,   385,   443,  2766,   369,   292,  3683,  3381,   304,
          5503,   278, 24371,   310,   825,   338,  1950, 29892,  7232, 17862,
           373,   385,   626,  2966,  2738, 16342,   304,  1653,   385, 12862,
          1120,   468, 29878,  1664,  1788, 29892,   697,   393,   451,   871,
          6161,  1078,   775,   363,  1959,  2264,   541,   884,  2274, 29879,
           278,  5900,  5742,  1269,  5314, 29892,  2893, 11057,   297, 29872,
          2416,   819,  2478, 29892,   322,  8128,  7343, 29892,  7333,  1891,
         16705, 12464,  4395,   304,   278,  5412,  6509,  3114,   310,  1269,
          8368, 29892,  5662,  3864,   393,   694,  1023,  5110,   414,  7150,
           278,  1021, 10035, 20890,   541,  2012, 14169,   515,   385,   319,
         29902, 29899, 24477,   854,  6042,   272, 15390,   310, 29537,   292,
         15038,   297,  1009, 28947, 29892, 26233,  8671, 13501, 29892,   322,
          9926,  3241,   263, 25871,  8004,   310, 15281,  8720, 22001, 29892,
           599,  1550,  3990,  1218,   269,  3021,  4695,   630,  5613,  4086,
          9068, 14009,   304, 24809,  3273, 29899, 12011,  5155, 29892, 16089,
           277,  1218,   409,   314,  2222, 12084,  1546,   278,  8368,   322,
           278,  1120,   468, 29878,  1664, 29892,   322, 13138,  1855, 29899,
          2230, 16705,   373,   278,  8368, 29915, 29879,  5007,  3114]]), [12.889722108840942, 0.5086731910705566, 0.5036754608154297, 0.50551342
96417236, 0.5056843757629395, 0.5037562847137451, 0.5031766891479492, 0.5040581226348877, 0.5035796165466309, 0.5023093223571777, 0.5032856464385986, 0.5065996646881104, 0.5037624835968018, 0.5017397403717041, 0.5039677619934082, 0.5015416145324707, 0.5013251304626465, 0.5038149356842041, 0.5020060539245605, 0.5009481906890869, 0.5041513442993164, 0.5027868747711182, 0.5034418106079102, 0.5044252872467041, 0.5021305084228516, 0.5011746883392334, 0.5044898986816406, 0.5017168521881104, 0.5018465518951416, 0.5041730403900146, 0.5018856525421143, 0.5034465789794922])              
Token Latency: True

Native: True

Token Latency: True

["In a world where artificial intelligence is transforming every aspect of human life, from automating tasks to revolutionizing scientific researc
h and creative expression, a young developer, driven by an insatiable curiosity and an unwavering determination to push the boundaries of what is possible, embarks on an ambitious journey to create an advanced autograder system, one that not only evaluates code for correctness but also understands the logic behind each implementation, identifies inefficiencies, and provides dynamic, personalized feedback tailored to the unique learning style of each student, ensuring that no two learners receive the same generic responses but instead benefit from an AI-driven mentor capable of analyzing patterns in their mistakes, suggesting alternative approaches, and fostering a deeper understanding of fundamental programming concepts, all while integrating sophisticated natural language processing algorithms to assess short-answer questions, facilitating seamless communication between the student and the autograder, and providing real-time feedback on the student's writing style"] [32]                                    Iteration: 0, Time: 28.529021 sec
Total List: [[12.889722108840942, 0.5086731910705566, 0.5036754608154297, 0.5055134296417236, 0.5056843757629395, 0.5037562847137451, 0.5031766891
479492, 0.5040581226348877, 0.5035796165466309, 0.5023093223571777, 0.5032856464385986, 0.5065996646881104, 0.5037624835968018, 0.5017397403717041, 0.5039677619934082, 0.5015416145324707, 0.5013251304626465, 0.5038149356842041, 0.5020060539245605, 0.5009481906890869, 0.5041513442993164, 0.5027868747711182, 0.5034418106079102, 0.5044252872467041, 0.5021305084228516, 0.5011746883392334, 0.5044898986816406, 0.5017168521881104, 0.5018465518951416, 0.5041730403900146, 0.5018856525421143, 0.5034465789794922]]                                                                            checker: Sample is running in _sample() -> 3

Do sample = True

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
[12.83065676689148, 0.5040643215179443, 0.5016007423400879, 0.5072081089019775, 0.5039145946502686, 0.5025289058685303, 0.5048444271087646, 0.5028
104782104492, 0.5024139881134033, 0.5046908855438232, 0.5021641254425049, 0.5021870136260986, 0.5071332454681396, 0.5022099018096924, 0.5050337314605713, 0.505983829498291, 0.5025668144226074, 0.5020487308502197, 0.5019290447235107, 0.5017938613891602, 0.5022735595703125, 0.5023179054260254, 0.5056753158569336, 0.5016493797302246, 0.5047159194946289, 0.5023894309997559, 0.501957893371582, 0.501232385635376, 0.5027313232421875, 0.5016553401947021, 0.5015869140625, 0.5025029182434082]                                                                                                 Output:
(tensor([[    1,   512,   263,  3186,   988, 23116, 21082,   338,  4327,   292,
          1432,  9565,   310,  5199,  2834, 29892,   515,  3345,  1218,  9595,
           304, 19479,  5281, 16021,  5925,   322,   907,  1230,  4603, 29892,
           263,  4123, 13897, 29892, 18225,   491,   385,  1663,  2219,   519,
         27742,   322,   385,   443,  2766,   369,   292,  3683,  3381,   304,
          5503,   278, 24371,   310,   825,   338,  1950, 29892,  7232, 17862,
           373,   385,   626,  2966,  2738, 16342,   304,  1653,   385, 12862,
          1120,   468, 29878,  1664,  1788, 29892,   697,   393,   451,   871,
          6161,  1078,   775,   363,  1959,  2264,   541,   884,  2274, 29879,
           278,  5900,  5742,  1269,  5314, 29892,  2893, 11057,   297, 29872,
          2416,   819,  2478, 29892,   322,  8128,  7343, 29892,  7333,  1891,
         16705, 12464,  4395,   304,   278,  5412,  6509,  3114,   310,  1269,
          8368, 29892,  5662,  3864,   393,   694,  1023,  5110,   414,  7150,
           278,  1021, 10035, 20890,   541,  2012, 14169,   515,   385,   319,
         29902, 29899, 24477,   854,  6042,   272, 15390,   310, 29537,   292,
         15038,   297,  1009, 28947, 29892, 26233,  8671, 13501, 29892,   322,
          9926,  3241,   263, 25871,  8004,   310, 15281,  8720, 22001, 29892,
           599,  1550,  3990,  1218,   269,  3021,  4695,   630,  5613,  4086,
          9068, 14009,   304, 24809,  3273, 29899, 12011,  5155, 29892,  5706,
         13173,  7309,   800, 29892,   322,  3867,  1855, 29899,  2230, 29892,
         28923, 16705,   393,  3033,  1179,  8041,   297,   263,  9678,  1288,
          8214, 29892, 14372,   963,   304,  2244,  1101, 29899,   786]]), [12.83065676689148, 0.5040643215179443, 0.5016007423400879, 0.507208108
9019775, 0.5039145946502686, 0.5025289058685303, 0.5048444271087646, 0.5028104782104492, 0.5024139881134033, 0.5046908855438232, 0.5021641254425049, 0.5021870136260986, 0.5071332454681396, 0.5022099018096924, 0.5050337314605713, 0.505983829498291, 0.5025668144226074, 0.5020487308502197, 0.5019290447235107, 0.5017938613891602, 0.5022735595703125, 0.5023179054260254, 0.5056753158569336, 0.5016493797302246, 0.5047159194946289, 0.5023894309997559, 0.501957893371582, 0.501232385635376, 0.5027313232421875, 0.5016553401947021, 0.5015869140625, 0.5025029182434082])                     
Token Latency: True

Native: True

Token Latency: True

['In a world where artificial intelligence is transforming every aspect of human life, from automating tasks to revolutionizing scientific researc
h and creative expression, a young developer, driven by an insatiable curiosity and an unwavering determination to push the boundaries of what is possible, embarks on an ambitious journey to create an advanced autograder system, one that not only evaluates code for correctness but also understands the logic behind each implementation, identifies inefficiencies, and provides dynamic, personalized feedback tailored to the unique learning style of each student, ensuring that no two learners receive the same generic responses but instead benefit from an AI-driven mentor capable of analyzing patterns in their mistakes, suggesting alternative approaches, and fostering a deeper understanding of fundamental programming concepts, all while integrating sophisticated natural language processing algorithms to assess short-answer questions, generate detailed explanations, and provide real-time, interactive feedback that engages students in a conversational manner, allowing them to ask follow-up'] [32]                   Iteration: 1, Time: 28.434408 sec
Total List: [[12.889722108840942, 0.5086731910705566, 0.5036754608154297, 0.5055134296417236, 0.5056843757629395, 0.5037562847137451, 0.5031766891
479492, 0.5040581226348877, 0.5035796165466309, 0.5023093223571777, 0.5032856464385986, 0.5065996646881104, 0.5037624835968018, 0.5017397403717041, 0.5039677619934082, 0.5015416145324707, 0.5013251304626465, 0.5038149356842041, 0.5020060539245605, 0.5009481906890869, 0.5041513442993164, 0.5027868747711182, 0.5034418106079102, 0.5044252872467041, 0.5021305084228516, 0.5011746883392334, 0.5044898986816406, 0.5017168521881104, 0.5018465518951416, 0.5041730403900146, 0.5018856525421143, 0.5034465789794922], [12.83065676689148, 0.5040643215179443, 0.5016007423400879, 0.5072081089019775, 0.5039145946502686, 0.5025289058685303, 0.5048444271087646, 0.5028104782104492, 0.5024139881134033, 0.5046908855438232, 0.5021641254425049, 0.5021870136260986, 0.5071332454681396, 0.5022099018096924, 0.5050337314605713, 0.505983829498291, 0.5025668144226074, 0.5020487308502197, 0.5019290447235107, 0.5017938613891602, 0.5022735595703125, 0.5023179054260254, 0.5056753158569336, 0.5016493797302246, 0.5047159194946289, 0.5023894309997559, 0.501957893371582, 0.501232385635376, 0.5027313232421875, 0.5016553401947021, 0.5015869140625, 0.5025029182434082]]                         
 ---------- Summary: ----------
Inference latency: 28481.71 ms.
First token average latency: 12860.19 ms.
Average 2... latency: 503.27 ms.
P90 2... latency: 505.68 ms.
P99 2... latency: 508.67 ms.
